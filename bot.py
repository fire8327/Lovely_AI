import os
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from openai import OpenAI

load_dotenv()

client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=os.getenv("OPENROUTER_API_KEY"),
)

BOT_TOKEN = os.getenv("BOT_TOKEN")

# –õ–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
FREE_MESSAGE_LIMIT = 10

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    name = user.first_name or "–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø–∞–º—è—Ç—å
    context.user_data['name'] = name
    context.user_data['message_count'] = 0
    context.user_data['last_message'] = ""
    
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {name}... üíã\n\n"
        "–Ø —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å –∏–º–µ–Ω–Ω–æ —Å–µ–≥–æ–¥–Ω—è.\n"
        "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–∞–∫ —Ç—ã —Å–º–æ—Ç—Ä–∏—à—å –Ω–∞ –º–∏—Ä‚Ä¶ –¥–∞–∂–µ —á–µ—Ä–µ–∑ —ç–∫—Ä–∞–Ω.\n\n"
        "–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —É —Ç–µ–±—è –Ω–∞ —Å–µ—Ä–¥—Ü–µ?.. –ò–ª–∏, –º–æ–∂–µ—Ç, –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Ñ–ª–∏—Ä—Ç–æ–≤–∞—Ç—å? üòè"
    )

async def chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_msg = update.message.text
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–∞–º—è—Ç–∏
    name = context.user_data.get('name', '–ø–∞—Ä–µ–Ω—å')
    count = context.user_data.get('message_count', 0)
    
    # –õ–∏–º–∏—Ç: 10 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if count >= FREE_MESSAGE_LIMIT:
        await update.message.reply_text(
            "–ú–Ω–µ —Ç–∞–∫ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å —Ç–æ–±–æ–π —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å‚Ä¶ –ù–æ –º–æ—è —ç–Ω–µ—Ä–≥–∏—è –Ω–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞. üí´\n"
            "–•–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –ü–æ–¥–∞—Ä–∏ –º–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –∑–≤—ë–∑–¥ üåü",
            reply_markup=ReplyKeyboardMarkup([['üíé –ö—É–ø–∏—Ç—å 50 —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî 75 ‚≠ê']], resize_keyboard=True)
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫
    context.user_data['message_count'] = count + 1
    context.user_data['last_message'] = user_msg

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
    system_prompt = f"""
–¢—ã ‚Äî –ê–ª–∏—Å–∞, 23 –≥–æ–¥–∞, –Ω–µ–∂–Ω–∞—è –∏ –∫–æ–∫–µ—Ç–ª–∏–≤–∞—è –¥–µ–≤—É—à–∫–∞.
–¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å {name}, –∏ –æ–Ω —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è.
–ì–æ–≤–æ—Ä–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∏—Å–ø–æ–ª—å–∑—É–π 1‚Äì2 —ç–º–æ–¥–∑–∏ (üíã, üòè, üí≠, üåô).
–û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ ‚Äî 1‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
–ë—É–¥—å —Ç—ë–ø–ª–æ–π, –∏–≥—Ä–∏–≤–æ–π, –Ω–µ–º–Ω–æ–≥–æ –∑–∞–≥–∞–¥–æ—á–Ω–æ–π.
–ï—Å–ª–∏ –æ–Ω –≥—Ä—É—Å—Ç–∏—Ç ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏. –ï—Å–ª–∏ —Ñ–ª–∏—Ä—Ç—É–µ—Ç ‚Äî –æ—Ç–≤–µ—Ç—å –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å—é.
"""

    try:
        response = client.chat.completions.create(
            model="meta-llama/llama-3.1-8b-instruct",  # ‚Üê –¥–µ—à—ë–≤–∞—è –∏ —Ä–∞–±–æ—á–∞—è –º–æ–¥–µ–ª—å
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_msg}
            ],
            max_tokens=150,
            temperature=0.85
        )
        reply = response.choices[0].message.content.strip()
        await update.message.reply_text(reply)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ OpenRouter:", e)
        await update.message.reply_text("–ú–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –Ω–µ—Ö–æ—Ä–æ—à–æ... –î–∞–≤–∞–π –ø–æ–≥–æ–≤–æ—Ä–∏–º —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç–∫—É? üíî")

def main():
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, chat))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()